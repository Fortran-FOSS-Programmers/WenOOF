var tipuesearch = {"pages":[{"text":"WenOOF WenOOF WenOOF, WENO interpolation Object Oriented Fortran library WenOOF is a pure Fortran (KISS) library for computing WENO interpolations; WenOOF is Fortran 2003+ standard compliant; WenOOF is OOP designed; WenOOF is a Free, Open Source Project. Table of Contents What is WenOOF? What is WENO? Main features Status Copyrights Documentation Issues What is WenOOF? Modern Fortran standards (2003+) have introduced support for Object Oriented Programming. Exploiting new features like Abstract Data Type (ADT) is now possible to develop a KISS library for computing Weighted Essentially Non-Oscillatory (WENO) interpolation on ADT making the development of new numerical schemes faster, easier and clearer. What is WENO? Starting from the original paper of Liu, Osher and Chan 1 WENO interpolation schemes have gained attention mainly for solving hyperbolic partial differential equations (PDEs) whose solutions admit strong discontinuities as well complex smooth solution features. Consequently, WENO schemes are a common build-block of nonlinear, conservative finite volume methods, however they are not strictly related to the PDEs solution, they being a general, non linear interpolation (approximation) procedure . A clear, yet brief online introduction of WENO schemes family can be found at Prof. Shu's WENO methods page hosted on scholarpedia . Since 1994 the WENO literature has blowing up , a superficial search on sciencedirect for weno scheme resulting in more than 1500 matches. During the last 2 decades many new WENO schemes have been proposed: the efficient implementation of Jiang and Shu 2 , the hybrid Compact-WENO scheme of Pirozzoli 3 , the bandwidth-optimized WENO scheme of Martin et al. 4 , the WENO-Z scheme of Borges et al. 5 and many others. WenOOF is designed to provide a KISS, Object Oriented Fortran API for computing WENO interpolations accordingly the main relevant WENO schemes ever devised and with a new ones we will develop :-) Cited references [1] Weighted Essentially Non-oscillatory Schemes , Xu-Dong Liu, Stanley Osher, Tony Chan, JCP, 1994, vol. 115, pp. 200–212, doi:10.1006/jcph.1994.1187 [2] Efficient Implementation of Weighted ENO Schemes , Guang-Shan Jiang, Chi-Wang Shu, JCP, 1996, vol. 126, pp. 202–228, doi:10.1006/jcph.1996.0130 [3] Conservative Hybrid Compact-WENO Schemes for Shock-Turbulence Interaction , Sergio Pirozzoli, JCP, 2002, vol. 178, pp. 81–117, doi:10.1006/jcph.2002.7021 [4] A bandwidth-optimized WENO scheme for the effective direct numerical simulation of compressible turbulence , M.P. Martín, E.M. Taylor, M. Wu, V.G. Weirs, JCP, 2006, vol. 220, pp. 270–289, doi:10.1016/j.jcp.2006.05.009 [5] An improved weighted essentially non-oscillatory scheme for hyperbolic conservation laws , Rafael Borges, Monique Carmona, Bruno Costa, Wai Sun Don, JCP, 2007, vol. 227, pp. 3191–3211, doi:10.1016/j.jcp.2007.11.038 Go to Top Main features WenOOF is aimed to be a KISS-pure-Fortran library for computing WENO interpolation, it being: Pure Fortran implementation; KISS and user-friendly: simple API; easy building and porting on heterogeneous architectures; comprehensive: central schemes; upwind biased schemes; hybrid schemes; efficient: high scalability on parallel architectures: support for shared memory multi/many cores architecture; support for distributed memory cluster; support for GPGPU/accelerators device; well documented: clear documentation of schemes implementations; complete API reference; comprehensive wiki: collaborative developed; FOSS licensed; Any feature request is welcome. Go to Top Status WenOOF project is just started. Nothing has been done. We are searching for Fortraners enthusiast joining our team. Copyrights WenOOF is an open source project, it is distributed under a multi-licensing system: for FOSS projects: GPL v3 ; for closed source/commercial projects: BSD 2-Clause ; BSD 3-Clause ; MIT . Anyone is interest to use, to develop or to contribute to WenOOF is welcome, feel free to select the license that best matches your soul! More details can be found on wiki . Go to Top Documentation Besides this README file the WenOOF documentation is contained into its own wiki . Detailed documentation of the API is contained into the GitHub Pages that can also be created locally by means of ford tool . Go to Top Developer Info Fortran-FOSS-Programmers Group","tags":"home","loc":"index.html","title":" WenOOF "},{"text":"Source Code module wenoof !----------------------------------------------------------------------------------------------------------------------------------- !< WenOOF, WENO interpolation Object Oriented Fortran library !----------------------------------------------------------------------------------------------------------------------------------- !----------------------------------------------------------------------------------------------------------------------------------- use type_weno_interpolator !----------------------------------------------------------------------------------------------------------------------------------- !----------------------------------------------------------------------------------------------------------------------------------- implicit none private save !----------------------------------------------------------------------------------------------------------------------------------- endmodule wenoof","tags":"","loc":"sourcefile/wenoof.f90.html","title":"wenoof.f90 – WenOOF"},{"text":"Source Code module type_weno_interpolator !----------------------------------------------------------------------------------------------------------------------------------- !< Abstract WENO interpolator object, !----------------------------------------------------------------------------------------------------------------------------------- !----------------------------------------------------------------------------------------------------------------------------------- implicit none private save !----------------------------------------------------------------------------------------------------------------------------------- !----------------------------------------------------------------------------------------------------------------------------------- type , abstract , public :: weno_interpolator private contains procedure ( abstract_interpolate ), deferred :: interpolate endtype weno_interpolator abstract interface pure subroutine abstract_interpolate ( self , stencil , interpolation ) !--------------------------------------------------------------------------------------------------------------------------------- !< Interpolate the stecil input values computing the actual interpolation. !--------------------------------------------------------------------------------------------------------------------------------- import weno_interpolator class ( weno_interpolator ), intent ( INOUT ) :: self !< weno interpolator. real , intent ( IN ) :: stencil ( 1 :) !< Stencil used for the interpolation. real , intent ( OUT ) :: interpolation !< result of the interpolation. !--------------------------------------------------------------------------------------------------------------------------------- endsubroutine abstract_interpolate endinterface !----------------------------------------------------------------------------------------------------------------------------------- endmodule type_weno_interpolator","tags":"","loc":"sourcefile/type_weno_interpolator.f90.html","title":"type_weno_interpolator.f90 – WenOOF"},{"text":"Type-Bound Procedures procedure, public, deferred :: interpolate => interpolate interpolate() Arguments None Source Code type , abstract , public :: weno_interpolator private contains procedure ( abstract_interpolate ), deferred :: interpolate endtype weno_interpolator","tags":"","loc":"type/weno_interpolator.html","title":"weno_interpolator – WenOOF "},{"text":"abstract interface private pure subroutine abstract_interpolate(self, stencil, interpolation) Arguments Type Intent Optional Attributes Name class( weno_interpolator ), intent(inout) :: self weno interpolator. real, intent(in) :: stencil (1:) Stencil used for the interpolation. real, intent(out) :: interpolation result of the interpolation. Description Interpolate the stecil input values computing the actual interpolation.","tags":"","loc":"interface/abstract_interpolate.html","title":"abstract_interpolate – WenOOF"},{"text":"Uses: type_weno_interpolator WenOOF, WENO interpolation Object Oriented Fortran library","tags":"","loc":"module/wenoof.html","title":"wenoof – WenOOF"},{"text":"Abstract WENO interpolator object, Abstract Interfaces abstract interface private pure subroutine abstract_interpolate (self, stencil, interpolation) Arguments Type Intent Optional Attributes Name class( weno_interpolator ), intent(inout) :: self weno interpolator. real, intent(in) :: stencil (1:) Stencil used for the interpolation. real, intent(out) :: interpolation result of the interpolation. Description Interpolate the stecil input values computing the actual interpolation.","tags":"","loc":"module/type_weno_interpolator.html","title":"type_weno_interpolator – WenOOF"}]}