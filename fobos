[modes]
modes = shared-gnu static-gnu shared-gnu-debug static-gnu-debug
        shared-intel static-intel shared-intel-debug static-intel-debug
        shared-ibm static-ibm shared-ibm-debug static-ibm-debug
        tests-gnu tests-gnu-debug
        tests-intel tests-intel-debug
        tests-ibm tests-ibm-debug

[common-variables]
$CSHARED_GNU = -c -fPIC -frealloc-lhs
$CSHARED_INT = -c -fpic -assume realloc_lhs
$CSHARED_IBM = -c -qpic -qmkshrobj -qxlf2003=autorealloc
$LSHARED     = -shared
$CSTATIC_GNU = -c -frealloc-lhs
$CSTATIC_INT = -c -assume realloc_lhs
$CSTATIC_IBM = -c -qxlf2003=autorealloc
$DEBUG_GNU   = -Og -g3 -ffpe-trap=invalid -Warray-bounds -Wcharacter-truncation -Wline-truncation -Wimplicit-interface -Wimplicit-procedure -Wunderflow -fcheck=all -fmodule-private -ffree-line-length-132 -fimplicit-none -fbacktrace -fdump-core -finit-real=nan -std=f2008 -fall-intrinsics
$DEBUG_INT   = -O0 -debug all -check all -warn all -extend-source 132 -traceback -gen-interfaces#-fpe-all=0 -fp-stack-check -fstack-protector-all -ftrapuv -no-ftz -std08
$DEBUG_IBM   = -qcheck=all -qdbg=level=9
$OPTIMIZE    = -O2
$EXDIRS      = FACE/src/tests FACE/src/third_party/
               FLAP/src/tests/ FLAP/src/third_party/
               FLOw/src/tests/ FLOw/src/third_party/
               FOODIE/src/tests FOODIE/src/third_party/
               FORESEER/src/tests FORESEER/src/third_party/
               PENF/src/tests/ PENF/src/third_party/
               pyplot-fortran/src/tests/
               VecFor/src/tests/ VecFor/src/third_party/

# main modes
# GNU
[shared-gnu]
template  = template-shared-gnu
target    = wenoof.F90
build_dir = ./shared/
output    = libwenoof.so
mklib     = shared

[static-gnu]
template  = template-static-gnu
target    = wenoof.F90
build_dir = ./static/
output    = libwenoof.a
mklib     = static

[shared-gnu-debug]
template  = template-shared-gnu-debug
target    = wenoof.F90
build_dir = ./shared/
output    = libwenoof.so
mklib     = shared

[static-gnu-debug]
template  = template-static-gnu-debug
target    = wenoof.F90
build_dir = ./static/
output    = libwenoof.a
mklib     = static

[tests-gnu]
template  = template-static-gnu
build_dir = ./exe/

[tests-gnu-debug]
template  = template-static-gnu-debug
build_dir = ./exe/

# Intel
[shared-intel]
template  = template-shared-intel
target    = wenoof.F90
build_dir = ./shared/
output    = libwenoof.so
mklib     = shared

[static-intel]
template  = template-static-intel
target    = wenoof.F90
build_dir = ./static/
output    = libwenoof.a
mklib     = static

[shared-intel-debug]
template  = template-shared-intel-debug
target    = wenoof.F90
build_dir = ./shared/
output    = libwenoof.so
mklib     = shared

[static-intel-debug]
template  = template-static-intel-debug
target    = wenoof.F90
build_dir = ./static/
output    = libwenoof.a
mklib     = static

[tests-intel]
template = template-static-intel
build_dir = ./exe/

[tests-intel-debug]
template  = template-static-intel-debug
build_dir = ./exe/

#IBM
[shared-ibm]
template  = template-shared-ibm
target    = wenoof.F90
build_dir = ./shared/
output    = libwenoof.so
mklib     = shared

[static-ibm]
template  = template-static-ibm
target    = wenoof.F90
build_dir = ./static/
output    = libwenoof.a
mklib     = static

[shared-ibm-debug]
template  = template-shared-ibm-debug
target    = wenoof.F90
build_dir = ./shared/
output    = libwenoof.so
mklib     = shared

[static-ibm-debug]
template  = template-static-ibm-debug
target    = wenoof.F90
build_dir = ./static/
output    = libwenoof.a
mklib     = static

[tests-ibm]
template  = template-static-ibm
build_dir = ./exe/

[tests-ibm-debug]
template  = template-static-ibm-debug
build_dir = ./exe/

#templates
[template-shared-gnu]
compiler     = gnu
cflags       = $CSHARED_GNU $OPTIMIZE
lflags       = $LSHARED $OPTIMIZE
exclude_dirs = $EXDIRS
mod_dir      = ./mod/
obj_dir      = ./obj/
src          = ./src/
colors       = True
quiet        = False
log          = True
jobs         = 2

[template-static-gnu]
compiler     = gnu
cflags       = $CSTATIC_GNU $OPTIMIZE
exclude_dirs = $EXDIRS
mod_dir      = ./mod/
obj_dir      = ./obj/
src          = ./src/
colors       = True
quiet        = False
log          = True
jobs         = 2

[template-shared-gnu-debug]
compiler     = gnu
cflags       = $CSHARED_GNU $DEBUG_GNU
lflags       = $LSHARED $DEBUG_GNU
preproc      = -DDEBUG
exclude_dirs = $EXDIRS
mod_dir      = ./mod/
obj_dir      = ./obj/
src          = ./src/
colors       = True
quiet        = False
log          = True
jobs         = 2

[template-static-gnu-debug]
compiler     = gnu
cflags       = $CSTATIC_GNU $DEBUG_GNU
lflags       = $DEBUG_GNU
preproc      = -DDEBUG
exclude_dirs = $EXDIRS
mod_dir      = ./mod/
obj_dir      = ./obj/
src          = ./src/
colors       = True
quiet        = False
log          = True
jobs         = 2

[template-shared-intel]
compiler     = intel
cflags       = $CSHARED_INT $OPTIMIZE
lflags       = $LSHARED $OPTIMIZE
exclude_dirs = $EXDIRS
mod_dir      = ./mod/
obj_dir      = ./obj/
src          = ./src/
colors       = True
quiet        = False
log          = True
jobs         = 2

[template-static-intel]
compiler     = intel
cflags       = $CSTATIC_INT $OPTIMIZE
lflags       = $OPTIMIZE
exclude_dirs = $EXDIRS
mod_dir      = ./mod/
obj_dir      = ./obj/
src          = ./src/
colors       = True
quiet        = False
log          = True
jobs         = 2

[template-shared-intel-debug]
compiler     = intel
cflags       = $CSHARED_INT $DEBUG_INT
lflags       = $LSHARED $DEBUG_INT
preproc      = -DDEBUG
exclude_dirs = $EXDIRS
mod_dir      = ./mod/
obj_dir      = ./obj/
src          = ./src/
colors       = True
quiet        = False
log          = True
jobs         = 2

[template-static-intel-debug]
compiler     = intel
cflags       = $CSTATIC_INT $DEBUG_INT
lflags       = $DEBUG_INT
preproc      = -DDEBUG
exclude_dirs = $EXDIRS
mod_dir      = ./mod/
obj_dir      = ./obj/
src          = ./src/
colors       = True
quiet        = False
log          = True
jobs         = 2

[template-shared-ibm]
compiler     = ibm
cflags       = $CSTATIC_IBM $OPTIMIZE
lflags       = $OPTIMIZE
exclude_dirs = $EXDIRS
mod_dir      = ./mod/
obj_dir      = ./obj/
src          = ./src/
colors       = True
quiet        = False
log          = True
jobs         = 2

[template-static-ibm]
compiler     = ibm
cflags       = $CSTATIC_IBM $OPTIMIZE
lflags       = $OPTIMIZE
exclude_dirs = $EXDIRS
mod_dir      = ./mod/
obj_dir      = ./obj/
src          = ./src/
colors       = True
quiet        = False
log          = True
jobs         = 2

[template-shared-ibm-debug]
compiler     = ibm
cflags       = $CSHARED_IBM $DEBUG_IBM
lflags       = $LSHARED $DEBUG_IBM
preproc      = -DDEBUG
exclude_dirs = $EXDIRS
mod_dir      = ./mod/
obj_dir      = ./obj/
src          = ./src/
colors       = True
quiet        = False
log          = True
jobs         = 2

[template-static-ibm-debug]
compiler     = ibm
cflags       = $CSTATIC_IBM $DEBUG_IBM
lflags       = $DEBUG_IBM
preproc      = -DDEBUG
exclude_dirs = $EXDIRS
mod_dir      = ./mod/
obj_dir      = ./obj/
src          = ./src/
colors       = True
quiet        = False
log          = True
jobs         = 2

# rules
[rule-makedoc]
help   = Build documentation from source files
rule_1 = rm -rf doc/html/*
rule_2 = ford doc/main_page.md --debug
rule_3 = cp -r doc/html/publish/* doc/html/
rule_4 = rm -rf doc/html/publish

[rule-deldoc]
help = Delete documentation
rule = rm -rf doc/html/*

[rule-delexe]
help = Delete exes
rule = rm -rf exe/

[rule-delstatic]
help = Delete static library
rule = rm -rf static/

[rule-delshared]
help = Delete shared library
rule = rm -rf shared/

[rule-clean]
help = Clean the project tree
rule_1 = FoBiS.py rule -ex deldoc
rule_2 = FoBiS.py rule -ex delexe
rule_3 = rm -f *.gcov
rule_4 = FoBiS.py rule -ex delstatic
rule_5 = FoBiS.py rule -ex delshared
rule_6 = rm -f *.log

[rule-cleanbuild]
help = Clean the building
rule_1 = FoBiS.py rule -ex delexe
rule_2 = FoBiS.py rule -ex delstatic
rule_3 = FoBiS.py rule -ex delshared
rule_4 = rm -f *.log

[rule-maketar]
help = Make tar archive of the project
rule = tar --xform="s%^%WenOOF/%" -czf WenOOF.tar.gz *

[rule-makecoverage]
help   = Perform coverage analysis
rule_1 = FoBiS.py clean -mode tests-gnu-debug
rule_2 = FoBiS.py build -mode tests-gnu-debug -coverage
rule_3 = ./scripts/run_tests.sh
rule_4 = rm -f exe/obj/face* exe/obj/flap* exe/obj/flow* exe/obj/foodie* exe/obj/foreseer* exe/obj/penf* exe/obj/pyplot* exe/obj/vecfor*
rule_5 = gcov -o exe/obj/ src/lib/wenoof*
rule_6 = rm -f *.gcov

[rule-makecoverage-analysis]
help   = Perform coverage analysis and saving reports in markdown
rule_1 = FoBiS.py clean -mode tests-gnu-debug
rule_2 = FoBiS.py build -mode tests-gnu-debug -coverage
rule_3 = ./scripts/run_tests.sh
rule_4 = rm -f exe/obj/face* exe/obj/flap* exe/obj/flow* exe/obj/foodie* exe/obj/foreseer* exe/obj/penf* exe/obj/pyplot* exe/obj/vecfor*
rule_5 = gcov -o exe/obj/ src/lib/wenoof*  src/lib/*/wenoof*
rule_6 = FoBiS.py rule -gcov_analyzer wiki/ Coverage-Analysis
rule_7 = rm -f *.gcov
